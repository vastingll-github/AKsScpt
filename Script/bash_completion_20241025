_pcp_pmdiff()
{
    # All supported arguments for a co00and
    local all_args=""
    # Regex for args expecting non-metric parameter
    local arg_regex=""
		# 補完用の準備された関数
		local cur prev cword
		_get_comp_words_by_ref -n : cur prev cword

		# 定義された変数として、COMP_CWORD(入力されたパラメータ個数）やCOMP_WORDS（入力された単語：配列）
    local cmd=${COMP_WORDS[0]}
		local cur=${COMP_WORDS[$cword]}

    COMPREPLY=()

		TMLIST="00:00 01:00 02:00 03:00 04:00 05:00 06:00 07:00 08:00 09:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00"
		#echo $TMLIST

    # Register arguments
    case $cmd in
    pmdiff)
    all_args="dzV?BEpqSTxXZ"
    # 全オプション        all_args="dzV?BEpqSTxXZ"
    #    all_args="B arch1_starttime;E arch1_endtime;p precision(精度);q threshold(閾値);S arch0_starttime;T arch0_endtime;xXZ"
    arg_regex="-[dzV?BEpqSTxXZ]"
    # 全オプション        arg_regex="-[dzV?BEpqSTxXZ]"
    #    arg_regex="-[dzV?BEpqSTxXZ]"

		# _pmdiff 関数は、TABを押下時に実行される。そのためその時のcur の値は随時変更されるので変更されたら前の値と比較し格納する
		bf_cur=$cur
		if [[ ${bf_cur} != ${cur} ]]; then
		  bf_cur=$cur
		fi

		echo; echo "============:  cmd ${COMP_WORDS[*]}, cword ${cword}, prev $prev, cur $cur, bf_cur $bf_cur"
	  #if [[ "${cmd}" == "pmdiff" && ${cword} -eq 1 ]]; then
	  if [[ "${cmd}" == "pmdiff" && ${cword} -eq 1 && ${cur} != "-" ]]; then
	  #if [[[ "${cmd}" == "pmdiff" && ${cword} -eq 1 && ${bf_cur} != ${cur} ]]]; then
		#if [[ $OutputYN == 0 ]]; then
	  #if [[ "${COMP_WORDS[0]}" == "pmdiff" && $OutputYN -eq 1 && ${cword} -eq 1 ]]; then
		# cmd は他のコマンドも同じ処理で実現するためチェックする
	  ## if [[ "${cmd}" == "pmdiff" && ${COMP_CWORD} -eq 1 && ${cur} != "-*" ]]; then
		  EXAMP01="-S arch1_starttime[00:00] -T arch1_endtime[23:59] -B arch2_starttime -E arch2_endtime "
		  #EXAMP02="-p precision[精度、浮動小数点表示] -q thres --skip-missing -x metric -X file -Z timezone[TZ:] "
		  EXAMP02="-p precision[display all floating point number] -q threshhold[Metrics Double point or Half value]"
			EXAMP03="-x metric -X file -Z timezone[TZ:] "
		  EXAMP04="--skip-missing -d[debug mode] -z[Use archive set TZ] -V[version] -?[help] archive1 [archive2] "
		  echo; echo ${EXAMP01}; echo ${EXAMP02}; echo ${EXAMP03}; echo ${EXAMP04}
			COMPREPLY=( $(compgen -W "$(echo "-S "$TMLIST) " -- "${cur}") )
#			echo -n "pmdiff "
	  elif [[ ${cword} -eq 2 && ${prev} == "-S*" ]]; then
			COMPREPLY=( $(compgen -W "$(echo $TMLIST) " -- "${cur}") )
		fi
    ;;
    esac

    local stime="",ttime="",btime="",etime="",sstime="",tttime="",bbtime="",eetime=""

	  if [[ "${prev}" == "-S" ]]; then
	  #if [[ "${cword}" -eq 3 ]]; then
#     local comp=( $( echo ${all_args} | sed -e 's,.\{1\},-& ,g') )
#     COMPREPLY=( $(compgen -W "${comp[*]} " -- "$cur") )
			COMPREPLY=( $(compgen -W "$(echo $TMLIST) " -- "${cur}") )
#      COMPREPLY=( $(compgen -W "-S -T -B -E -p -q -x -X -Z --skip-missing -dzV? " -- "${cur}") )
	  elif [[ "${COMP_WORDS[$cword-2]}" == "-S" && "${prev}" == "-T" ]]; then
			COMPREPLY=( $(compgen -W "$(echo $TMLIST) " -- "${cur}") )
	  elif [[ "${prev}" == "-B" ]]; then
			COMPREPLY=( $(compgen -W "$(echo $TMLIST) " -- "${cur}") )
	  elif [[ "${prev}" == "-E" ]]; then
			COMPREPLY=( $(compgen -W "$(echo $TMLIST) " -- "${cur}") )
    elif [[ "${cword}" -ge 2 ]]; then

			if [[ $tm_ind -eq 1 ]];then
        COMPREPLY=( $(compgen -W "-T -B -E -p -q -x -X -Z --skip-missing -dzV? " -- "${cur}") )
			elif [[ $tm_ind -eq 2 ]];then
        COMPREPLY=( $(compgen -W "-S -B -E -p -q -x -X -Z --skip-missing -dzV? " -- "${cur}") )
			elif [[ $tm_ind -eq 3 ]];then
        COMPREPLY=( $(compgen -W "-B -E -p -q -x -X -Z --skip-missing -dzV? " -- "${cur}") )
			elif [[ $tm_ind -eq 4 ]];then
        COMPREPLY=( $(compgen -W "-S -T -E -p -q -x -X -Z --skip-missing -dzV? " -- "${cur}") )
			elif [[ $tm_ind -eq 5 ]];then
        COMPREPLY=( $(compgen -W "-T -E -p -q -x -X -Z --skip-missing -dzV? " -- "${cur}") )
			elif [[ $tm_ind -eq 6 ]];then
        COMPREPLY=( $(compgen -W "-S -E -p -q -x -X -Z --skip-missing -dzV? " -- "${cur}") )
			elif [[ $tm_ind -eq 7 ]];then
        COMPREPLY=( $(compgen -W "-E -p -q -x -X -Z --skip-missing -dzV? " -- "${cur}") )
			elif [[ $tm_ind -eq 8 ]];then
        COMPREPLY=( $(compgen -W "-S -T -B -p -q -x -X -Z --skip-missing -dzV? " -- "${cur}") )
		  else
       COMPREPLY=( $(compgen -W "-S -T -B -E -p -q -x -X -Z --skip-missing -dzV? " -- "${cur}") )
		  fi

    elif [[ "${prev}" = "-*" ]]; then
      COMPREPLY=( $(compgen -W "-S -T -B -E -p -q -x -X -Z --skip-missing -dzV? " -- "${cur}") )
    elif [[ "${prev}" = "-S" ]]; then
			tm_ind=1
			#COMPREPLY=( $(compgen -W "00:00 01:00 02:00 03:00 04:00 05:00 06:00 07:00 08:00 09:00 10:00 11:00 12:00 13:00 14:00:15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:59 " -- "${cur}") )
			COMPREPLY=( $(compgen -W "$(echo $TMLIST) " -- "${cur}") )
#			echo "CUR $cur"
    elif [[ "${prev}" = "-T" ]]; then
			tm_ind=$tm_ind+2
			COMPREPLY=( $(compgen -W "$(echo $TMLIST) " -- "${cur}") )
			ttime=`date +%s -d "2024/1/1 ${cur}"`
    elif [[ "${prev}" = "-B" ]]; then
			tm_ind=$tm_ind+4
			COMPREPLY=( $(compgen -W "$(echo $TMLIST) " -- "${cur}") )
			btime=`date +%s -d "2024/1/1 ${cur}"`
    elif [[ "${prev}" = "-E" ]]; then
			tm_ind=$tm_ind+8
			COMPREPLY=( $(compgen -W "$(echo $TMLIST) " -- "${cur}") )
			etime=`date +%s -d "2024/1/1 ${cur}"`
		else
			# cur に時刻が5桁で設定されない場合があるようなのでここでチェック
      for i in $(seq 1 $cword); do
        if [[ "${COMP_WORDS[$i]}" == -S || "${COMP_WORDS[$i]}" == -T || "${COMP_WORDS[$i]}" == -B || "${COMP_WORDS[$i]}" == -E ]]; then
					if [[ "${COMP_WORDS[$i]}" == -S ]]; then
            stime="${COMP_WORDS[(($i+1))]}"
			      sstime=`date +%s -d "2024/1/1 ${stime}"`
					elif [[ "${COMP_WORDS[$i]}" == -T ]]; then
            ttime="${COMP_WORDS[(($i+1))]}"
			      tttime=`date +%s -d "2024/1/1 ${ttime}"`
					elif [[ "${COMP_WORDS[$i]}" == -B ]]; then
            btime="${COMP_WORDS[(($i+1))]}"
			      bbtime=`date +%s -d "2024/1/1 ${btime}"`
					elif [[ "${COMP_WORDS[$i]}" == -E ]]; then
            etime="${COMP_WORDS[(($i+1))]}"
			      eetime=`date +%s -d "2024/1/1 ${etime}"`
			    fi
			  fi
      done

			if [[ $tttiem -lt $sstime ]]; then
				echo "-T time is bigger than -S time"
				return
			elif [[ $bbtiem -lt $eetime ]]; then
				echo "-E time is bigger than -B time"
				return
			fi
      #compopt -o filenames
      compopt -o filenames
			curpath=`pwd`
			cd /var/log/pcp/pmlogger/
			#_filedir

      COMPREPLY=( $(compgen -f -- "${cur}") )
    fi
}
complete -o nosort -F _pcp_pmdiff -o default pmdiff
#cd $curpath

##### complete -F _pcp_pmdiff -o default pmafm pmcd pmchart pmcheck pmclient pmconfig pmdakertnel pmdanvidia pmdumptext pmfine pmfind pmgetopt pmie pmie_check pminfo pmlogctl pmlogger_daily pmlogger_daily_report pmlogreduce pmlogrewrite pmlogsu00ary pmnsmerge pmprove pmpython pmquery pmseries pmsignal pmstat pmval
